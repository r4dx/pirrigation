apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'spring-boot'

apply from: 'dependencies.gradle'
apply from: 'coverage.gradle'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath 'org.hidetake:gradle-ssh-plugin:2.0.0'
    classpath 'com.netflix.nebula:gradle-ospackage-plugin:3.6.1'
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE'
  }
}

mainClassName = "com.pirrigation.PirrigationApp"
version = '1.0.0'

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    baseName = "pirr"
    doLast {
        copy {
            from 'conf/'
            into destinationDir.getAbsolutePath() + '/conf/'
        }
    }
}
jar.dependsOn jacocoTestReport

apply from: 'deploy.gradle'

run {
    main = "$mainClassName"
    classpath = sourceSets.main.runtimeClasspath
    def execArgs = System.getProperty('execArgs')
    if (execArgs)    
      args = execArgs.split().toList()
}

test {
    scanForTestClasses = true
    testLogging.showStandardStreams = true

    beforeTest {
        descriptor -> logger.lifecycle("Running test: " + descriptor)
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }

    test {
        java {
            srcDir 'test'
        }
    }
}